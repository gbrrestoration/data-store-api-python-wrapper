{"openapi":"3.0.2","info":{"title":"FastAPI","version":"0.1.0"},"paths":{"/check-access/check-general-access":{"get":{"tags":["Access check"],"summary":"Check General Access","description":"Function Description\n--------------------\n\nA check point for the data store which responds if any authentication \nis present and valid. Does not check role authorisation.\n\nUsed to distinguish between 'general' and 'protected' access for this API. \n\n\nArguments\n----------\nuser : User, optional\n    The authenticated user - may or may not have the correct roles. \n\nReturns\n-------\nUser\n    Returns user information\n\n\n\nSee Also (optional)\n--------\n\nExamples (optional)\n--------","operationId":"check_general_access_check_access_check_general_access_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/check-access/check-admin-access":{"get":{"tags":["Access check"],"summary":"Check Admin Access","description":"Function Description\n--------------------\n\nA check point for the data store which responds if any authentication \nis present and valid. Checks the the user is an admin.\n\nArguments\n----------\nuser : User, optional\n    The authenticated user - may or may not have the correct roles. \n\nReturns\n-------\nUser\n    Returns user information\n\n\n\nSee Also (optional)\n--------\n\nExamples (optional)\n--------","operationId":"check_admin_access_check_access_check_admin_access_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/check-access/check-read-access":{"get":{"tags":["Access check"],"summary":"Check Read Access","description":"Function Description\n--------------------\n\nA check point for the data store front end to validate authorisation.\n\nOnly allows read users (or read and write).\n\n\nArguments\n----------\nprotected_roles : ProtectedRole, optional\n    The protected role dependency, by default Depends( kc_auth.get_any_protected_role_dependency([usage_role]))\n\nReturns\n-------\nUser\n    Returns user information\n\n\nSee Also (optional)\n--------\n\nExamples (optional)\n--------","operationId":"check_read_access_check_access_check_read_access_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/check-access/check-write-access":{"get":{"tags":["Access check"],"summary":"Check Write Access","description":"Function Description\n--------------------\n\nA check point for the data store front end to validate authorisation.\n\nOnly allows read-write users.\n\n\nArguments\n----------\nprotected_roles : ProtectedRole, optional\n    The protected role dependency, by default Depends( kc_auth.get_any_protected_role_dependency([usage_role]))\n\nReturns\n-------\nUser\n    Returns user information\n\n\n\nSee Also (optional)\n--------\n\nExamples (optional)\n--------","operationId":"check_write_access_check_access_check_write_access_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/metadata/validate-metadata":{"post":{"tags":["Metadata"],"summary":"Validate Metadata","description":"validate_metadata\nAllows for validation checks without any interaction with external resources.\nUsed for testing and potentially as an ongoing validation checker on the front end.\n\nArguments\n----------\nmetadata : CollectionFormat\n    The metadata to validate - this validation occurs both in terms of \n    parsing the collection format object at the API level and also by \n    validating the schema against the json schema file.\n\nReturns\n-------\n : Status\n    The status object - true/false\n\nRaises\n------\nHTTPException 422\n    If the parsing fails at API level then 422 is returned with the \n    shared interface validation exception type.\n\nSee Also (optional)\n--------\n\nExamples (optional)\n--------","operationId":"validate_metadata_metadata_validate_metadata_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CollectionFormat"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/metadata/dataset-schema":{"get":{"tags":["Metadata"],"summary":"Get Dataset Schema","description":"Function Description\n--------------------\n\nReturns the json schema Schema object which defines the required dataset metadata. \nMetdata which is uploaded via the mint-dataset endpoint will be validated against this \nschema before being accepted.\n\n\nArguments\n----------\nprotected_roles : ProtectedRole, optional\n    by default Depends( kc_auth.get_any_protected_role_dependency([usage_role]))\n\nReturns\n-------\nSchema\n    The json schema object\n\n\nRaises\n------\nHTTPException\n    Raises a 500 internal error if something goes wrong.\n\nSee Also (optional)\n--------\n\nExamples (optional)\n--------","operationId":"get_dataset_schema_metadata_dataset_schema_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Schema"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/register/mint-dataset":{"post":{"tags":["Register dataset"],"summary":"Mint Dataset","description":"Function Description\n--------------------\n\nUsed by the front end to prepare the data store, the handle service, metadata\netc for a new dataset. Accepts the filled out metadata which must validate \nagainst the current dataset schema which is provided by the /dataset-schema endpoint.\n\nIf the schema validates, then a handle will be minted, a handle endpoint will be formed \nand updated for the handle service, a S3 location will be determined, the metadata updated\nwith these details and uploaded to that location to seed the folder structure. \n\nThis function returns the MintResponse which includes the status, the handle, the S3 location\ninformation.\n\n\nArguments\n----------\ncollection_format : CollectionFormat\n    The input pre-parsed using the pydantic input model validation.\n    Still is validated using the json schema as well.\n\nReturns\n-------\nMintResponse\n    The mint response object which encodes the result if successful\n\n\nRaises\n------\nHTTPException\n    400 response if metadata fails to validate\nHTTPException\n    400 response if the S3 location cannot be uniquely determined\n\nSee Also (optional)\n--------\n\nExamples (optional)\n--------","operationId":"mint_dataset_register_mint_dataset_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CollectionFormat"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MintResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/register/update-metadata":{"post":{"tags":["Register dataset"],"summary":"Get Dataset Schema","description":"get_dataset_schema\nGiven the metadata and handle id, will re-parse the metadata\nas valid ro crate, then overwrite the registry entry and \ns3 bucket metadata.\n\nWill also update the timestamp of the updated_time to be \nthe current time.\n\nArguments\n----------\ncollection_format : CollectionFormat\n    The updated metadata\nhandle_id : str\n    The handle for which to update the metadata\n\nReturns\n-------\n : UpdateMetadataResponse\n    The updated metadata response\n\nRaises\n------\nHTTPException\n    422 - validation failure against schema at API level\nHTTPException\n    400 - validation failure against schema at JSON schema level\nHTTPException\n    400 - failed to transform into ro crate\nHTTPException\n    500 - failed to update registry \n\nSee Also (optional)\n--------\n\nExamples (optional)\n--------","operationId":"get_dataset_schema_register_update_metadata_post","parameters":[{"required":true,"schema":{"title":"Handle Id","type":"string"},"name":"handle_id","in":"query"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CollectionFormat"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateMetadataResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/registry/items/list-all-datasets":{"get":{"tags":["Registry Items"],"summary":"List All Datasets","description":"list_all_datasets\nLists all data in the data registry. Returns a ListRegistryResponse with a registry_items attribute \nwhich is a python list of RegistryItem objects, one object per entry to the registry.\n\nReturns\n-------\n : ListRegistryResponse\n    An object containing the responses status and a registry_items python list containing a RegistryItem for \n    each item in the the database.\n\nSee Also (optional)\n--------\n\nExamples (optional)\n--------","operationId":"list_all_datasets_registry_items_list_all_datasets_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListRegistryResponse"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/registry/items/fetch-dataset":{"get":{"tags":["Registry Items"],"summary":"Fetch Dataset","description":"fetch_dataset\nGiven a unique Handle ID, this function searches the data registry for \nthe data associated with this handle and will return a RegistryFetchResponse \ncontaining as RegistryItem as an attribute for the queried \ndataset.\n\nArguments\n----------\nhandle_id : str\n    The unique handle ID for searching the data-registry with.\n\nReturns\n-------\n : RegistryFetchResponse\n    Containing the response status and registry_item.\n\nRaises\n------\nHTTPException\n    If fails to source item from the registry.\n\nSee Also (optional)\n--------\n\nExamples (optional)\n--------","operationId":"fetch_dataset_registry_items_fetch_dataset_get","parameters":[{"required":true,"schema":{"title":"Handle Id","type":"string"},"name":"handle_id","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegistryFetchResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/registry/credentials/generate-read-access-credentials":{"post":{"tags":["Registry credentials"],"summary":"Generate Read Access Credentials","description":"generate_access_credentials\nGiven an S3 location, will attempt to generate programmatic access keys\nfor the storage bucket at this particular subdirectory. \n\nNote that the permission boundary is restricted by the intersection of \nthe preformed role and the created policy based on the location - which is\nbounded to the storage bucket.\n\nThis produces read level access into the subset of the bucket \nrequested in the S3 location object.\n\nTODO currently this does not enforce any ownership of datasets.\n\nArguments\n----------\ncredentials_request: CredentialsRequest \n    Contains the location + console session URL required flag\n\nReturns\n-------\n : CredentialResponse\n    The AWS credentials\n\nRaises\n------\nHTTPException\n    500 error code if something goes wrong with STS call or otherwise.\n\nSee Also (optional)\n--------\n\nExamples (optional)\n--------","operationId":"generate_read_access_credentials_registry_credentials_generate_read_access_credentials_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CredentialsRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CredentialResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/registry/credentials/generate-write-access-credentials":{"post":{"tags":["Registry credentials"],"summary":"Generate Write Access Credentials","description":"generate_access_credentials\nGiven an S3 location, will attempt to generate programmatic access keys\nfor the storage bucket at this particular subdirectory. \n\nNote that the permission boundary is restricted by the intersection of \nthe preformed role and the created policy based on the location - which is\nbounded to the storage bucket.\n\nThis produces write level access into the subset of the bucket \nrequested in the S3 location object.\n\nTODO currently this does not enforce any ownership of datasets.\n\nArguments\n----------\ncredentials_request: CredentialsRequest \n    Contains the location + console session URL required flag\n\nReturns\n-------\n : CredentialResponse\n    The AWS credentials\n\nRaises\n------\nHTTPException\n    500 error code if something goes wrong with STS call or otherwise.\n\nSee Also (optional)\n--------\n\nExamples (optional)\n--------","operationId":"generate_write_access_credentials_registry_credentials_generate_write_access_credentials_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CredentialsRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CredentialResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/admin/registry/convert/collection-format/ro-crate":{"post":{"tags":["Administration"],"summary":"Convert Collection Format Rocrate","description":"convert_collection_format_rocrate\nGiven a list of collection format inputs will attempt to return a list \nof freshly generated ro-crate objects. Note that the collection format \nalone is not sufficient since it does not include the registry metadata\nsuch as the s3 location, created time etc. For this reason the input \ntype also includes some other helper fields likely sourced from the \nregistry item.\n\nArguments\n----------\ncollection_format_input_list : InputConvertCollectionFormatRocrate\n    The list of collection formats\n\nReturns\n-------\n : ResponseConvertCollectionFormatRocrate\n    The list of outputted possible rocrates.\n\nSee Also (optional)\n--------\n\nExamples (optional)\n--------","operationId":"convert_collection_format_rocrate_admin_registry_convert_collection_format_ro_crate_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InputConvertCollectionFormatRocrate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseConvertCollectionFormatRocrate"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/admin/registry/convert/rocrate/collection-format":{"post":{"tags":["Administration"],"summary":"Convert Rocrate Collection Format","description":"convert_rocrate_collection_format\nGiven a list of rocrate items will return a list of equal size with items in the\nsame order. Each item represents a possible successful conversion into a collection\nformat object. Each item includes an error field True/False for whether the\nconversion succeeds, a collection_format if it does and an error_message if it doesn't.\n\nThis method is designed to assist database migrations from the admin tools by providing\nthe means to generate up to date collection format representations against the current\nschema. This can be used in conjunction with imports/exports to perform a quick database\nupdate.\n\nArguments\n----------\nrocrate_input_list : InputConvertRocrateCollectionFormat\n    The list of rocrate inputs\n\nReturns\n-------\n : ResponseConvertRocrateCollectionFormat\n    The list of possible collection format outputs\n\nSee Also (optional)\n--------\n\nExamples (optional)\n--------","operationId":"convert_rocrate_collection_format_admin_registry_convert_rocrate_collection_format_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InputConvertRocrateCollectionFormat"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseConvertRocrateCollectionFormat"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/admin/registry/export/parsed":{"get":{"tags":["Administration"],"summary":"Export Registry Parsed","description":"export_registry_parsed\nReturns all the registry items parsed into the current\nRegistryItem format.\n\nReturns\n-------\n : RegistryParsedExport\n    The export object which has a list of entries.\n\nSee Also (optional)\n--------\n\nExamples (optional)\n--------","operationId":"export_registry_parsed_admin_registry_export_parsed_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegistryParsedExport"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/admin/registry/export/unparsed":{"get":{"tags":["Administration"],"summary":"Export Registry Unparsed","description":"export_registry_unparsed\nReturns all the registry items without first parsing them as\nRegistryItems. This method is useful for a situation in which\nthe items in the registry are no longer valid under the current\nRegistryItem model. You can use this method to dump the db,\nthen modify it offline to be valid, then upload it using the\nparsed import endpoint to validate that the new entries are\nvalid and are updating old entries as desired.\n\nReturns\n-------\n : RegistryUnparsedExport\n    The list of unparsed objects in Dict[str,Any] format.\n\nSee Also (optional)\n--------\n\nExamples (optional)\n--------","operationId":"export_registry_unparsed_admin_registry_export_unparsed_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegistryUnparsedExport"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/admin/registry/import/parsed":{"post":{"tags":["Administration"],"summary":"Import Registry Parsed","description":"import_registry_parsed\nGiven a list of registry items (parsed as valid before being\naccepted at this endpoint) this method will update the current\nregistry, according to the rules you set in the other options,\nto match your import. This method is much safer than the unparsed\nmethod as it only allows valid RegistryItems in. However there\ncould be situations where you want to preemptively update the\nregistry before the API is updated to remove down time after\nupdate.\nSee the options in ImportResponse, these are critical controls.\n\nArguments\n----------\nregistry_import : RegistryParsedImport\n    The registry import object which contains configuration\n    options and the list of items.\nprotected_roles : ProtectedRole, optional\n    _description_, by default Depends( admin_user_protected_role_dependency)\n\nReturns\n-------\n : ImportResponse\n    The response, which includes status info, statistics and\n    other items.\n\nRaises\n------\nHTTPException\n    500 error if write failure occurs\nHTTPException\n    500 error if delete failure occurs\n\nSee Also (optional)\n--------\n\nExamples (optional)\n--------","operationId":"import_registry_parsed_admin_registry_import_parsed_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegistryParsedImport"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ImportResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/admin/registry/import/unparsed":{"post":{"tags":["Administration"],"summary":"Import Registry Unparsed","description":"import_registry_unparsed\nGiven a list of unparsed - unvalidated -registry items\nthis method will update the current registry, according to the\nrules you set in the other options, to match your import.\nThis method is much less safe vs the unparsed method as it\nallows any valid dynamodb record as RegistryItems. However there\ncould be situations where you want to pre-emptively update the\nregistry before the API is updated to remove down time after\nupdate.\nSee the options in ImportResponse, these are critical controls.\n\nArguments\n----------\nregistry_import : RegistryParsedImport\n    The registry import object which contains configuration\n    options and the list of items.\nprotected_roles : ProtectedRole, optional\n    _description_, by default Depends( admin_user_protected_role_dependency)\n\nReturns\n-------\n : ImportResponse\n    The response, which includes status info, statistics and\n    other items.\n\nRaises\n------\nHTTPException\n    500 error if write failure occurs\nHTTPException\n    500 error if delete failure occurs\n\nSee Also (optional)\n--------\n\nExamples (optional)\n--------","operationId":"import_registry_unparsed_admin_registry_import_unparsed_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegistryUnparsedImport"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ImportResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/":{"get":{"summary":"Root","description":"Function Description\n--------------------\n\nDemonstration unauthenticated endpoint.\n\n\n\nReturns\n-------\nJson\n    Basic message response\n\n\n\nSee Also (optional)\n--------\n\nExamples (optional)\n--------","operationId":"root__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}}},"components":{"schemas":{"CollectionFormat":{"title":"CollectionFormat","required":["author","dataset_info"],"type":"object","properties":{"author":{"$ref":"#/components/schemas/CollectionFormatAuthor"},"dataset_info":{"$ref":"#/components/schemas/CollectionFormatDatasetInfo"}},"additionalProperties":false},"CollectionFormatAuthor":{"title":"CollectionFormatAuthor","required":["name","email","organisation"],"type":"object","properties":{"name":{"title":"Name","type":"string"},"email":{"title":"Email","type":"string"},"orcid":{"title":"Orcid","maxLength":2083,"minLength":1,"type":"string","format":"uri"},"organisation":{"$ref":"#/components/schemas/CollectionFormatOrganisation"}},"additionalProperties":false},"CollectionFormatConversion":{"title":"CollectionFormatConversion","required":["handle","collection_format","s3","created_time","updated_time"],"type":"object","properties":{"handle":{"title":"Handle","type":"string"},"collection_format":{"$ref":"#/components/schemas/CollectionFormat"},"s3":{"$ref":"#/components/schemas/S3Location"},"created_time":{"title":"Created Time","type":"string","format":"date-time"},"updated_time":{"title":"Updated Time","type":"string","format":"date-time"}}},"CollectionFormatDatasetInfo":{"title":"CollectionFormatDatasetInfo","required":["name","description","publisher","created_date","published_date","license"],"type":"object","properties":{"name":{"title":"Name","type":"string"},"description":{"title":"Description","type":"string"},"publisher":{"$ref":"#/components/schemas/CollectionFormatOrganisation"},"created_date":{"title":"Created Date","type":"string","format":"date"},"published_date":{"title":"Published Date","type":"string","format":"date"},"license":{"title":"License","maxLength":65536,"minLength":1,"type":"string","format":"uri"},"keywords":{"title":"Keywords","type":"array","items":{"type":"string"}},"version":{"title":"Version","type":"string"}},"additionalProperties":false},"CollectionFormatOrganisation":{"title":"CollectionFormatOrganisation","required":["name"],"type":"object","properties":{"name":{"title":"Name","type":"string"},"ror":{"title":"Ror","maxLength":2083,"minLength":1,"type":"string","format":"uri"}},"additionalProperties":false},"CredentialResponse":{"title":"CredentialResponse","required":["status","credentials"],"type":"object","properties":{"status":{"$ref":"#/components/schemas/Status"},"credentials":{"$ref":"#/components/schemas/Credentials"},"console_session_url":{"title":"Console Session Url","type":"string"}}},"Credentials":{"title":"Credentials","required":["aws_access_key_id","aws_secret_access_key","aws_session_token","expiry"],"type":"object","properties":{"aws_access_key_id":{"title":"Aws Access Key Id","type":"string"},"aws_secret_access_key":{"title":"Aws Secret Access Key","type":"string"},"aws_session_token":{"title":"Aws Session Token","type":"string"},"expiry":{"title":"Expiry","type":"string","format":"date-time"}}},"CredentialsRequest":{"title":"CredentialsRequest","required":["s3_location","console_session_required"],"type":"object","properties":{"s3_location":{"$ref":"#/components/schemas/S3Location"},"console_session_required":{"title":"Console Session Required","type":"boolean"}}},"HTTPValidationError":{"title":"HTTPValidationError","type":"object","properties":{"detail":{"title":"Detail","type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}},"ImportResponse":{"title":"ImportResponse","required":["status","trial_mode"],"type":"object","properties":{"status":{"$ref":"#/components/schemas/Status"},"trial_mode":{"title":"Trial Mode","type":"boolean"},"statistics":{"$ref":"#/components/schemas/ImportStatistics"},"failure_list":{"title":"Failure List","type":"array","items":{"maxItems":2,"minItems":2,"type":"array","items":[{"type":"string"},{"type":"object"}]}}}},"ImportStatistics":{"title":"ImportStatistics","required":["old_registry_size","new_registry_size","deleted_entries","overwritten_entries","new_entries"],"type":"object","properties":{"old_registry_size":{"title":"Old Registry Size","type":"integer"},"new_registry_size":{"title":"New Registry Size","type":"integer"},"deleted_entries":{"title":"Deleted Entries","type":"integer"},"overwritten_entries":{"title":"Overwritten Entries","type":"integer"},"new_entries":{"title":"New Entries","type":"integer"}}},"InputConvertCollectionFormatRocrate":{"title":"InputConvertCollectionFormatRocrate","required":["collection_format_items"],"type":"object","properties":{"collection_format_items":{"title":"Collection Format Items","type":"array","items":{"$ref":"#/components/schemas/CollectionFormatConversion"}}}},"InputConvertRocrateCollectionFormat":{"title":"InputConvertRocrateCollectionFormat","required":["rocrate_items"],"type":"object","properties":{"rocrate_items":{"title":"Rocrate Items","type":"array","items":{"type":"object"}}}},"ListRegistryResponse":{"title":"ListRegistryResponse","required":["status","num_items","registry_items"],"type":"object","properties":{"status":{"$ref":"#/components/schemas/Status"},"num_items":{"title":"Num Items","type":"integer"},"registry_items":{"title":"Registry Items","type":"array","items":{"$ref":"#/components/schemas/RegistryItem"}}}},"MintResponse":{"title":"MintResponse","required":["status"],"type":"object","properties":{"status":{"$ref":"#/components/schemas/Status"},"handle":{"title":"Handle","type":"string"},"s3_location":{"$ref":"#/components/schemas/S3Location"}}},"PossibleCollectionFormat":{"title":"PossibleCollectionFormat","required":["success"],"type":"object","properties":{"success":{"title":"Success","type":"boolean"},"collection_format":{"$ref":"#/components/schemas/CollectionFormat"},"error_message":{"title":"Error Message","type":"string"}}},"PossibleRocrate":{"title":"PossibleRocrate","required":["success"],"type":"object","properties":{"success":{"title":"Success","type":"boolean"},"rocrate":{"title":"Rocrate","type":"object"},"error_message":{"title":"Error Message","type":"string"}}},"RegistryFetchResponse":{"title":"RegistryFetchResponse","required":["status"],"type":"object","properties":{"status":{"$ref":"#/components/schemas/Status"},"item":{"$ref":"#/components/schemas/RegistryItem"}}},"RegistryItem":{"title":"RegistryItem","required":["handle","collection_format","rocrate_metadata","s3","created_time","updated_time"],"type":"object","properties":{"handle":{"title":"Handle","type":"string"},"collection_format":{"$ref":"#/components/schemas/CollectionFormat"},"rocrate_metadata":{"title":"Rocrate Metadata","type":"object"},"s3":{"$ref":"#/components/schemas/S3Location"},"created_time":{"title":"Created Time","type":"string","format":"date-time"},"updated_time":{"title":"Updated Time","type":"string","format":"date-time"}}},"RegistryParsedExport":{"title":"RegistryParsedExport","required":["status"],"type":"object","properties":{"status":{"$ref":"#/components/schemas/Status"},"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/RegistryItem"}}}},"RegistryParsedImport":{"title":"RegistryParsedImport","required":["items"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/RegistryItem"}},"allow_new_entries":{"title":"Allow New Entries","type":"boolean","default":false},"allow_entry_deletion":{"title":"Allow Entry Deletion","type":"boolean","default":false},"trial_mode":{"title":"Trial Mode","type":"boolean","default":false}}},"RegistryUnparsedExport":{"title":"RegistryUnparsedExport","required":["status"],"type":"object","properties":{"status":{"$ref":"#/components/schemas/Status"},"items":{"title":"Items","type":"array","items":{"type":"object"}}}},"RegistryUnparsedImport":{"title":"RegistryUnparsedImport","required":["items"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"type":"object"}},"allow_new_entries":{"title":"Allow New Entries","type":"boolean","default":false},"allow_entry_deletion":{"title":"Allow Entry Deletion","type":"boolean","default":false},"trial_mode":{"title":"Trial Mode","type":"boolean","default":false}}},"ResponseConvertCollectionFormatRocrate":{"title":"ResponseConvertCollectionFormatRocrate","required":["rocrate_items"],"type":"object","properties":{"rocrate_items":{"title":"Rocrate Items","type":"array","items":{"$ref":"#/components/schemas/PossibleRocrate"}}}},"ResponseConvertRocrateCollectionFormat":{"title":"ResponseConvertRocrateCollectionFormat","required":["collection_format_items"],"type":"object","properties":{"collection_format_items":{"title":"Collection Format Items","type":"array","items":{"$ref":"#/components/schemas/PossibleCollectionFormat"}}}},"S3Location":{"title":"S3Location","required":["bucket_name","path","s3_uri"],"type":"object","properties":{"bucket_name":{"title":"Bucket Name","type":"string"},"path":{"title":"Path","type":"string"},"s3_uri":{"title":"S3 Uri","type":"string"}}},"Schema":{"title":"Schema","required":["json_schema"],"type":"object","properties":{"json_schema":{"title":"Json Schema","type":"object"}}},"Status":{"title":"Status","required":["success","details"],"type":"object","properties":{"success":{"title":"Success","type":"boolean"},"details":{"title":"Details","type":"string"}}},"UpdateMetadataResponse":{"title":"UpdateMetadataResponse","required":["status","handle","s3_location"],"type":"object","properties":{"status":{"$ref":"#/components/schemas/Status"},"handle":{"title":"Handle","type":"string"},"s3_location":{"$ref":"#/components/schemas/S3Location"}}},"User":{"title":"User","required":["username","roles","access_token"],"type":"object","properties":{"username":{"title":"Username","type":"string"},"email":{"title":"Email","type":"string"},"roles":{"title":"Roles","type":"array","items":{"type":"string"}},"access_token":{"title":"Access Token","type":"string"}}},"ValidationError":{"title":"ValidationError","required":["loc","msg","type"],"type":"object","properties":{"loc":{"title":"Location","type":"array","items":{"anyOf":[{"type":"string"},{"type":"integer"}]}},"msg":{"title":"Message","type":"string"},"type":{"title":"Error Type","type":"string"}}}},"securitySchemes":{"OAuth2PasswordBearer":{"type":"oauth2","flows":{"password":{"scopes":{},"tokenUrl":"token"}}}}}}